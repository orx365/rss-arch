name: RSS Feed Update and Deploy

on:
  schedule:
    - cron: '0 */4 * * *'  # Every 4 hours
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  reformat-rss:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests feedparser PyRSS2Gen
        
    - name: Run RSS reformatter
      run: |
        mkdir -p output
        python3 rss_reformatter.py --feed-file feeds.txt
        
    # Just commit the changes to the repo
    - name: Commit and push changes
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add output/
        git commit -m "Update RSS feeds - $(date)" || echo "No changes to commit"
        git push
    
    # Download the current _site artifact for modification
    - name: Download current site artifact
      uses: actions/github-script@v6
      with:
        script: |
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          const matchArtifact = artifacts.data.artifacts.find((artifact) => {
            return artifact.name === "github-pages" && artifact.workflow_run.head_branch === 'main';
          });
          
          if (!matchArtifact) {
            core.setFailed('No github-pages artifact found!');
            return;
          }
          
          const download = await github.rest.actions.downloadArtifact({
            owner: context.repo.owner,
            repo: context.repo.repo,
            artifact_id: matchArtifact.id,
            archive_format: 'zip'
          });
          
          require('fs').writeFileSync('site.zip', Buffer.from(download.data));
      continue-on-error: true

    - name: Extract current site
      run: |
        mkdir -p _site
        unzip -o site.zip -d _site || echo "No site archive found, will create new one"
      continue-on-error: true
      
    - name: Update RSS files in site
      run: |
        mkdir -p _site/output
        cp -r output/* _site/output/
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload updated artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site
      
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4